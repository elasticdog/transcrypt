.\" generated with Ronn-NG/v0.9.1
.\" http://github.com/apjanke/ronn-ng/tree/0.9.1
.TH "TRANSCRYPT" "1" "July 2022" ""
.SH "NAME"
\fBtranscrypt\fR \- transparently encrypt files within a git repository
.SH "SYNOPSIS"
\fBtranscrypt\fR [\fIoptions\fR\|\.\|\.\|\.]
.SH "DESCRIPTION"
transcrypt will configure a Git repository to support the transparent encryption/decryption of files by utilizing OpenSSL's symmetric cipher routines and Git's built\-in clean/smudge filters\. It will also add a Git alias "ls\-crypt" to list all transparently encrypted files within the repository\.
.P
The transcrypt source code and full documentation may be downloaded from \fIhttps://github\.com/elasticdog/transcrypt\fR\.
.SH "OPTIONS"
.TP
\fB\-c\fR, \fB\-\-cipher\fR=\fIcipher\fR
the symmetric cipher to utilize for encryption; defaults to aes\-256\-cbc
.TP
\fB\-p\fR, \fB\-\-password\fR=\fIpassword\fR
the password to derive the key from; defaults to 30 random base64 characters
.TP
\fB\-md\fR, \fB\-\-digest\fR=\fIdigest\fR
the password to derive the key from; defaults to 30 random base64 characters
.TP
\fB\-\-kdf\fR=\fIkdf\fR
the digest used to hash the salted password; defaults to md5\. It is strongly recommended to use a stronger hash (e\.g\. sha256) if possible\.
.TP
\fB\-bs\fR, \fB\-\-base\-salt\fR=\fIbase_salt\fR
if specified, and a KDF is used, this overrides the text used as the basis for salt\-generation\.
.TP
\fB\-vs\fR, \fB\-\-versioned\-config\fR=\fIuse_versioned_config\fR
force transcrypt to use or not use the versioned config\. By default the versioned config is used when using a KDF\.
.TP
\fB\-\-set\-openssl\-path\fR=\fIpath_to_openssl\fR
use OpenSSL at this path; defaults to 'openssl' in $PATH
.TP
\fB\-y\fR, \fB\-\-yes\fR
assume yes and accept defaults for non\-specified options
.TP
\fB\-d\fR, \fB\-\-display\fR
display the current repository's cipher and password
.TP
\fB\-r\fR, \fB\-\-rekey\fR
re\-encrypt all encrypted files using new credentials
.TP
\fB\-f\fR, \fB\-\-flush\-credentials\fR
remove the locally cached encryption credentials and re\-encrypt any files that had been previously decrypted
.TP
\fB\-F\fR, \fB\-\-force\fR
ignore whether the git directory is clean, proceed with the possibility that uncommitted changes are overwritten
.TP
\fB\-u\fR, \fB\-\-uninstall\fR
remove all transcrypt configuration from the repository and leave files in the current working copy decrypted
.TP
\fB\-\-upgrade\fR
apply the latest transcrypt scripts in the repository without changing your configuration settings
.TP
\fB\-l\fR, \fB\-\-list\fR
list all of the transparently encrypted files in the repository, relative to the top\-level directory
.TP
\fB\-s\fR, \fB\-\-show\-raw\fR=\fIfile\fR
show the raw file as stored in the git commit object; use this to check if files are encrypted as expected
.TP
\fB\-e\fR, \fB\-\-export\-gpg\fR=\fIrecipient\fR
export the repository's cipher and password to a file encrypted for a gpg recipient
.TP
\fB\-i\fR, \fB\-\-import\-gpg\fR=\fIfile\fR
import the password and cipher from a gpg encrypted file
.TP
\fB\-v\fR, \fB\-\-version\fR
print the version information
.TP
\fB\-h\fR, \fB\-\-help\fR
view this help message
.SH "EXAMPLES"
To initialize a Git repository to support transparent encryption, just change into the repo and run the transcrypt script\. transcrypt will prompt you interactively for all required information if the corresponding option flags were not given\.
.IP "" 4
.nf
$ cd <path\-to\-your\-repo>/
$ transcrypt
.fi
.IP "" 0
.P
Once a repository has been configured with transcrypt, you can transparently encrypt files by applying the "crypt" filter, diff and merge to a pattern in the top\-level \fI\.gitattributes\fR config\. If that pattern matches a file in your repository, the file will be transparently encrypted once you stage and commit it:
.IP "" 4
.nf
$ echo 'sensitive_file  filter=crypt diff=crypt merge=crypt' >> \.gitattributes
$ git add \.gitattributes sensitive_file
$ git commit \-m 'Add encrypted version of a sensitive file'
.fi
.IP "" 0
.P
See the gitattributes(5) man page for more information\.
.P
If you have just cloned a repository containing files that are encrypted, you'll want to configure transcrypt with the same cipher and password as the origin repository\. Once transcrypt has stored the matching credentials, it will force a checkout of any existing encrypted files in order to decrypt them\.
.P
If the origin repository has just rekeyed, all clones should flush their transcrypt credentials, fetch and merge the new encrypted files via Git, and then re\-configure transcrypt with the new credentials\.
.SH "AUTHOR"
Aaron Bull Schaefer <aaron@elasticdog\.com>
.SH "SEE ALSO"
enc(1), gitattributes(5)
